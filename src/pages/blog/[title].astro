---
import Layout from "@/layouts/Layout.astro";
import Date from "@/components/Date.astro";
import { getAllPosts } from "@/repository/post";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { render } from "astro:content";

export const getStaticPaths = (async () => {
	const posts = await getAllPosts();

	return posts.map((post) => ({
		params: { title: post.id },
		props: { post },
	}));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post: entry } = Astro.props;
const { Content } = await render(entry);

const post = entry.data
// TODO: create remark plugin (https://docs.astro.build/en/recipes/reading-time/)
const readingTime: string = '12 min';
---

<Layout>
    <article class="flex flex-col grow gap-8">
        <div class="flex flex-col gap-1.5">
            {post.draft && <span class="text-base text-red-500">(Draft)</span>}
            <h1 class="text-2xl font-semibold">
                {post.title}
            </h1>
            <div class="flex flex-wrap items-center gap-x-3">
                <p class="font-semibold">
                    <Date date={post.publishDate} /> /{" "}
                    {readingTime}
                </p>
                {
                    post.updatedDate && (
                        <span class="bg-cyan-500/15 rounded-lg px-2 py-1">
                            Updated:
                            <Date class="ms-1" date={post.updatedDate} />
                        </span>
                    )
                }
            </div>
            {
                !!post.tags?.length && (
                    <div class="flex gap-3 items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M9.568 3H5.25A2.25 2.25 0 0 0 3 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 0 0 5.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 0 0 9.568 3Z" />
                            <path stroke-linecap="round" stroke-linejoin="round" d="M6 6h.008v.008H6V6Z" />
                        </svg>

                        {post.tags.map((tag) => (
                            <a class="hover:underline underline-offset-1" href={`/tags/${tag}/`}>
                                #{tag}
                            </a>
                        ))}
                    </div>
                )
            }
        </div>
        <div class="flex gap-10 items-start">
            <!-- TODO: implement Table of Contents -->
            <!-- {!!headings.length && <TOC headings={headings} />} -->
            <div class="prose
                prose-h1:font-bold prose-h1:text-xl
                prose-a:text-blue-600 prose-img:rounded-xl
                prose-headings:underline">
                <Content />
            </div>
        </div>
    </article>
</Layout>
